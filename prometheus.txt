Write-up:
Initially, I installed Helm on Windows by downloading the appropriate binary and integrating it into the Environment path variable.

Next, I utilized Helm to add a repository for Prometheus with the following command:
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

I then initiated Minikube, setting up Docker and Kubernetes environments.

Following that, I deployed Prometheus using the command:
helm install prometheus prometheus-community/prometheus
This step installs Prometheus with its standard configuration.

For tailoring Prometheus to our specific requirements, I employed configmaps. These are utilized to provide configuration data to active pods. The available configmaps can be viewed with:
kubectl get configmaps
The output included:
- kube-root-ca.crt
- prometheus-alertmanager
- prometheus-server

To review the current setup of a particular configmap, I used:
kubectl get configmap <configmap_name> -o yaml

Modifications to a configmap's configuration were made using:
kubectl edit configmap <configmap_name> 

My focus was on the prometheus-server configmap, specifically changing the target from localhost:9090 to proxy-server:8080.

Lastly, I accessed the proxy-server webpage and navigated to /metrics to examine Prometheus's collected data metrics. After registering a user and triggering a 404 error in the web application, I revisited the metrics and observed that these events were successfully logged.
